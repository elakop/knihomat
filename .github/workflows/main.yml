# .github/workflows/build-android.yml

name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev python3-setuptools python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cython==0.29.33
        pip install buildozer
        pip install sh

    - name: Create main.py if missing
      run: |
        if [ ! -f main.py ]; then
          cat > main.py << 'EOF'
        #!/usr/bin/env python3
        import os
        import sys
        sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
        from PLIN053_bookswap import BookSellingApp
        if __name__ == '__main__':
            BookSellingApp().run()
        EOF
        fi

    - name: Setup minimal buildozer.spec
      run: |
        cat > buildozer.spec << 'EOF'
        [app]
        title = Knihomat
        package.name = knihomat
        package.domain = org.example
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas
        version = 0.1
        requirements = python3,kivy
        orientation = portrait
        fullscreen = 0

        [buildozer]
        log_level = 2

        [android]
        android.archs = arm64-v8a
        android.permissions = WRITE_EXTERNAL_STORAGE
        android.api = 28
        android.minapi = 21
        android.ndk = 25b
        android.private_storage = True
        android.accept_sdk_license = True
        EOF

    - name: Completely clean buildozer cache
      run: |
        rm -rf ~/.buildozer
        rm -rf .buildozer

    - name: Build APK with Buildozer (first attempt)
      id: build_attempt_1
      continue-on-error: true
      run: |
        export GRADLE_OPTS="-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx1024m -Dorg.gradle.configureondemand=false"
        export JAVA_OPTS="-Xmx1024m"
        buildozer android debug --verbose
      env:
        ANDROID_NDK_ROOT: ""
        ANDROID_SDK_ROOT: ""

    - name: Fix Gradle permissions and retry
      if: steps.build_attempt_1.outcome == 'failure'
      run: |
        # Find and fix gradlew permissions
        find .buildozer -name "gradlew" -exec chmod +x {} \; 2>/dev/null || true
        find ~/.buildozer -name "gradlew" -exec chmod +x {} \; 2>/dev/null || true
        
        # Manual Gradle setup if needed
        if [ -d ".buildozer/android/platform/build-arm64-v8a/dists/knihomat" ]; then
          cd .buildozer/android/platform/build-arm64-v8a/dists/knihomat
          if [ -f "gradlew" ]; then
            chmod +x gradlew
            ./gradlew clean assembleDebug --no-daemon --parallel || true
          fi
          cd ../../../../..
        fi
        
        # Try buildozer again
        export GRADLE_OPTS="-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx1024m"
        buildozer android debug --verbose

    - name: List generated files
      if: always()
      run: |
        echo "Contents of bin directory:"
        ls -la bin/ 2>/dev/null || echo "bin directory not found"
        echo "Looking for APK files:"
        find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: knihomat-apk
        path: bin/*.apk
        retention-days: 30

    - name: Upload any APK found
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: partial-build-apk
        path: |
          **/*.apk
          .buildozer/android/platform/build-*/dists/*/build/outputs/apk/debug/*.apk
        retention-days: 7

    - name: Upload buildozer log on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-debug-log
        path: |
          .buildozer/android/platform/build-*/build.log
          .buildozer/android/platform/build-*/dists/*/gradlew.log
        retention-days: 7
